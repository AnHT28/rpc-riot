/*
 * Calculator service demonstrating remote procedure calls
 */

/*
 * Generated by erpcgen 1.14.0 on Thu Oct 30 12:45:04 2025.
 *
 * AUTOGENERATED - DO NOT EDIT
 */


#include <new>
#include "c_calculator_server.h"
#include "calculator_server.hpp"
#include "erpc_manually_constructed.hpp"

using namespace erpc;
using namespace std;
using namespace erpcShim;


class Calculator_server: public Calculator_interface
{
    public:
        virtual ~Calculator_server() {};


        int32_t add(int32_t a, int32_t b)
        {
            int32_t result;
            result = ::add(a, b);

            return result;
        }

        int32_t subtract(int32_t a, int32_t b)
        {
            int32_t result;
            result = ::subtract(a, b);

            return result;
        }

        int32_t multiply(int32_t a, int32_t b)
        {
            int32_t result;
            result = ::multiply(a, b);

            return result;
        }

        float divide(int32_t a, int32_t b)
        {
            float result;
            result = ::divide(a, b);

            return result;
        }
};

ERPC_MANUALLY_CONSTRUCTED_STATIC(Calculator_service, s_Calculator_service);
ERPC_MANUALLY_CONSTRUCTED_STATIC(Calculator_server, s_Calculator_server);

erpc_service_t create_Calculator_service(void)
{
    erpc_service_t service;

#if ERPC_ALLOCATION_POLICY == ERPC_ALLOCATION_POLICY_DYNAMIC
    service = new (nothrow) Calculator_service(new (nothrow)Calculator_server());
#else
    if (s_Calculator_service.isUsed())
    {
        service = NULL;
    }
    else
    {
        s_Calculator_server.construct();
        s_Calculator_service.construct(s_Calculator_server.get());
        service = s_Calculator_service.get();
    }
#endif

    return service;
}

void destroy_Calculator_service(erpc_service_t service)
{
#if ERPC_ALLOCATION_POLICY == ERPC_ALLOCATION_POLICY_DYNAMIC
    if (service)
    {
        delete (Calculator_server *)(((Calculator_service *)service)->getHandler());
        delete (Calculator_service *)service;
    }
#else
    (void)service;
    erpc_assert(service == s_Calculator_service.get());
    s_Calculator_service.destroy();
    s_Calculator_server.destroy();
#endif
}

