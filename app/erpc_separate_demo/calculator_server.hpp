/*
 * Calculator service demonstrating remote procedure calls
 */

/*
 * Generated by erpcgen 1.14.0 on Thu Oct 30 12:45:04 2025.
 *
 * AUTOGENERATED - DO NOT EDIT
 */


#if !defined(_calculator_server_hpp_)
#define _calculator_server_hpp_

#include "calculator_interface.hpp"

#include "erpc_server.hpp"
#include "erpc_codec.hpp"

#if 11400 != ERPC_VERSION_NUMBER
#error "The generated shim code version is different to the rest of eRPC code."
#endif


namespace erpcShim
{

/*!
 * @brief Service subclass for Calculator.
 */
class Calculator_service : public erpc::Service
{
public:
    Calculator_service(Calculator_interface *_Calculator_interface);

    virtual ~Calculator_service();

    /*! @brief return service interface handler. */
    Calculator_interface* getHandler(void);

    /*! @brief Call the correct server shim based on method unique ID. */
    virtual erpc_status_t handleInvocation(uint32_t methodId, uint32_t sequence, erpc::Codec * codec, erpc::MessageBufferFactory *messageFactory, erpc::Transport * transport);

private:
    Calculator_interface *m_handler;
    /*! @brief Server shim for add of Calculator interface. */
    erpc_status_t add_shim(erpc::Codec * codec, erpc::MessageBufferFactory *messageFactory, erpc::Transport * transport, uint32_t sequence);

    /*! @brief Server shim for subtract of Calculator interface. */
    erpc_status_t subtract_shim(erpc::Codec * codec, erpc::MessageBufferFactory *messageFactory, erpc::Transport * transport, uint32_t sequence);

    /*! @brief Server shim for multiply of Calculator interface. */
    erpc_status_t multiply_shim(erpc::Codec * codec, erpc::MessageBufferFactory *messageFactory, erpc::Transport * transport, uint32_t sequence);

    /*! @brief Server shim for divide of Calculator interface. */
    erpc_status_t divide_shim(erpc::Codec * codec, erpc::MessageBufferFactory *messageFactory, erpc::Transport * transport, uint32_t sequence);
};

} // erpcShim


#endif // _calculator_server_hpp_
