#include <stdio.h>
#include "erpc_client_setup.h"
#include "erpc_transport_setup.h"
#include "erpc_client_manager.h"    // <-- add this
#include "multiply_demo_client.hpp" // generated C++ client

using namespace erpcShim;

int main(void) {
    printf("Starting eRPC Multiply Client...\n");

    // (host, port, isServer=false)
    erpc_transport_t transport = erpc_transport_tcp_init("127.0.0.1", 50051, false);
    if (!transport) { fprintf(stderr, "transport init failed\n"); return 1; }

    erpc_mbf_t mbf = erpc_mbf_dynamic_init();
    if (!mbf) { fprintf(stderr, "mbf init failed\n"); return 1; }

    // Initialize client and obtain the manager pointer from the handle
    erpc_client_t client = erpc_client_init(transport, mbf);
    if (!client) { fprintf(stderr, "client init failed\n"); return 1; }

    // In eRPC 1.14, erpc_client_t is a pointer to erpc::ClientManager.
    erpc::ClientManager *manager = reinterpret_cast<erpc::ClientManager*>(client);

    // Construct the generated service client with a valid manager
    MultiplyService_client service(manager);

    int32_t a, b;
    printf("Enter first number: ");
    if (scanf("%d", &a) != 1) return 1;
    printf("Enter second number: ");
    if (scanf("%d", &b) != 1) return 1;

    // Remote call
    int32_t result = service.multiply(a, b);
    printf("Result from server: %d * %d = %d\n", a, b, result);

    erpc_client_deinit(client);
    return 0;
}
